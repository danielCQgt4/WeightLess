//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Backend.Entity
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DBContext : DbContext
    {
        public DBContext()
            : base("name=DBContext")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<Activity> Activity { get; set; }
        public virtual DbSet<Activity_Assitance> Activity_Assitance { get; set; }
        public virtual DbSet<Assistance> Assistance { get; set; }
        public virtual DbSet<Publication> Publication { get; set; }
        public virtual DbSet<Publication_Activity> Publication_Activity { get; set; }
        public virtual DbSet<User> User { get; set; }
        public virtual DbSet<UserDataHistory> UserDataHistory { get; set; }
    
        public virtual ObjectResult<User> validate_login(string email, string password)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<User>("validate_login", emailParameter, passwordParameter);
        }
    
        public virtual ObjectResult<User> validate_login(string email, string password, MergeOption mergeOption)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<User>("validate_login", mergeOption, emailParameter, passwordParameter);
        }
    }
}
