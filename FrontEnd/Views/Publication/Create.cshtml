@model FrontEnd.Models.PublicationViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Dashboard.cshtml";
}

<h2 class="mb-4">Agregar Consejo</h2>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <div class="form-row">
        <div class="col">
            @Html.LabelFor(model => model.title, htmlAttributes: new { @class = "" })
            @Html.EditorFor(model => model.title, new { htmlAttributes = new { @class = "form-control", @placeholder = "Ingresa un titulo a esta publicacion" } })
            @Html.ValidationMessageFor(model => model.title, "", new { @class = "text-danger" })
        </div>
        <div class="col">
            @Html.LabelFor(model => model.type)
            @Html.DropDownListFor(model => model.type, new SelectList(Model.types, "value", "desc"), "Elegir...", new { @class = "form-control", @id = "select-type" })
            @Html.ValidationMessageFor(model => model.type, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-row">
        <div class="form-group col-md-10 col-lg-6 mt-3">
            @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "d-block" })
            @Html.TextAreaFor(model => model.description, new { @class = "form-control", @placeholder = "Ingresa una descripción para el consejo", @Cols = 50, @Rows = 4, maxlength = 550 })
            @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="mt-3" id="cont-title-activities" style="display: none;"><h4>Actividades</h4><hr /></div>

    <div class="d-none">
        @Html.DropDownListFor(model => model.publicationActivities, new SelectList(ViewBag.activities, "idActivity", "name"), "Elegir...", new { @class = "form-control", @id = "select-activities-base" })
    </div>

    @if (Model.activities != null) {
        foreach (var item in Model.activities) {
            <input type="hidden" value="@item" name="tempActivity" />
        }
    }

    <div>
        <div id="cont-form-activities">
            <!--<div id="formActivity">
            <div class="form-row">
                <div class="form-group col-md-10 col-lg-8">
                    <label for="publicationActivities">Actividad</label>
                    @Html.DropDownListFor(model => model.publicationActivities, new SelectList(ViewBag.activities, "idActivity", "name"), "Elegir...", new { @class = "form-control" })
                </div>
            </div>
            <div class="form-row">
                <div class="form-group col-md-10 col-lg-8">-->
            @*@Html.LabelFor(model => model.description, htmlAttributes: new { @class = "d-block" })*@
            <!--<label for="actDesc">Descripción de la actividad</label>
            <textarea class="form-control" id="actDesc" cols="50" rows="4"></textarea>-->
            @*@Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })*@
            <!--</div>
                </div>
                <hr />
            </div>-->
        </div>

        <div class="w-100 mb-4">
            <button id="admDivCheck" class="btn btn-success" style="display: none">Agregar actividad</button>
        </div>

    </div>

    <div class="mt-4 d-flex flex-end align-items-center justify-content-end">
        <a href="@Url.Action("TrainerPublications","Publication")" class="btn btn-secondary mr-2">Regresar</a>
        <input id="btn-end-send" type="submit" value="Finalizar" class="btn btn-info" />
    </div>

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })



</div>
}


@if (TempData["errorCreate"] != null) {
    <script>
        showDiagError('@TempData["errorCreate"]');
    </script>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

