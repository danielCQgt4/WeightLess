@model FrontEnd.Models.UserViewModel

@{
    ViewBag.Title = "EditProfile";
    Layout = "~/Views/Shared/_Dashboard.cshtml";
}

<h2>Editar perfil</h2>



<!--MSG-->

@if (ViewBag.status != null) {

    if (ViewBag.status) {


        <div class="alert alert-success" role="alert">

            @ViewBag.msg

        </div>

    }

    if (!ViewBag.status) {

        <div class="alert alert-danger" role="alert">

            @ViewBag.msg

        </div>

    }

}



@using (Html.BeginForm()) {

    @Html.AntiForgeryToken()



    <hr />

    @Html.ValidationSummary(true, "", new {​​​​ @class = "text-danger" }​​​​)

    <div class="form-row">

        <div class="form-group col-md-4">

            @Html.LabelFor(model => model.dni)

            @Html.EditorFor(model => model.dni, new {​​​​ htmlAttributes = new {​​​​ @class = "form-control", @placeholder = "Cédula" }​​​​ }​​​​)

            @Html.ValidationMessageFor(model => model.dni, "", new {​​​​ @class = "text-danger" }​​​​)

        </div>

        <div class="form-group col-md-4">

            @Html.LabelFor(model => model.name)

            @Html.EditorFor(model => model.name, new {​​​​ htmlAttributes = new {​​​​ @class = "form-control", @placeholder = "Nombre" }​​​​ }​​​​)

            @Html.ValidationMessageFor(model => model.name, "", new {​​​​ @class = "text-danger" }​​​​)

        </div>

        <div class="form-group col-md-4" id="weight-lbl">

            @Html.LabelFor(model => model.weight)

            @Html.EditorFor(model => model.weight, new {​​​​ htmlAttributes = new {​​​​ @class = "form-control", @placeholder = "Peso" }​​​​ }​​​​)

            @Html.ValidationMessageFor(model => model.weight, "", new {​​​​ @class = "text-danger" }​​​​)

        </div>

        <div class="form-group col-md-4" id="height-lbl">

            @Html.LabelFor(model => model.height)

            @Html.EditorFor(model => model.height, new {​​​​ htmlAttributes = new {​​​​ @class = "form-control", @placeholder = "Altura" }​​​​ }​​​​)

            @Html.ValidationMessageFor(model => model.height, "", new {​​​​ @class = "text-danger" }​​​​)

        </div>

    </div>





    <div class="form-group col-lg-12">

        <div>

            <input type="submit" value="Cambiar información" class="btn btn-info" />

        </div>

    </div>

    <br />

    <br />

    <br />

    <br />

    <br />

    <div class="form-row">

        <div class="form-group col-md-12">



            <h3>Cambiar contraseña</h3>

            <label class="form-group">Contraseña</label>

            <input id="Text1" type="text" class="form-control" />



        </div>

    </div>

    <div class="form-row">

        <div class="form-group col-md-12">

            <label class="form-group">Confirmar contraseña</label>

            <input id="Text1" type="text" class="form-control" />



        </div>

    </div>

    <div class="form-group col-md-4">

        <div>

            <input type="submit" value="Cambiar contraseña" class="btn btn-info" />

        </div>

    </div>

    <br />

    <br />

    <br />

    <br />

    <br />

    <br />

    <br />

    <br />

    <div class="form-group col-lg-offset-9">

        <div>

            <input type="submit" value="Ir atrás" class="btn btn-info" />

        </div>

    </div>





    @section Scripts {

        @Scripts.Render("~/bundles/jqueryval")

    }





}​​​​